on:
    # Triggers the workflow on push or pull request events but only for the main branch
    workflow_call:
  
env:
  NODEJS_VERSION: v18.18.2
  RUN_TRIVY_SCAN: true
  RUN_CODE_COVERAGE: true

jobs:
    matrix-pledge-and-viewstate:
      continue-on-error: true
      strategy:
        fail-fast: false
        matrix:
            net1: ["fabric", "corda"]
            net2: ["fabric", "corda"]
      env:
        FULL_BUILD_DISABLED: true
        FREE_UP_GITHUB_RUNNER_DISK_SPACE_DISABLED: false
        JEST_TEST_PATTERN: packages/cacti-copm-test/src/test/typescript/integration/test-copm-getverifiedview.test.ts packages/cacti-copm-test/src/test/typescript/integration/test-copm-pledge-claim.test.ts
        JEST_TEST_RUNNER_DISABLED: false
        JEST_TEST_COVERAGE_PATH: ./code-coverage-ts/copm-pledge-${{ matrix.net1 }}-${{ matrix.net2}}
        JEST_TEST_CODE_COVERAGE_ENABLED: true
        TAPE_TEST_PATTERN: ''
        COPM_NET_1: ${{ matrix.net1 }}
        COPM_NET_2: ${{ matrix.net2 }}
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@v4.1.1
        - uses: ./.github/actions/copm_test/
        - name: Generate github.properties
          run: |
            echo "Using ${GITHUB_ACTOR} user."
            echo "username=${GITHUB_ACTOR}" >> github.properties
            echo "password=${{ secrets.GITHUB_TOKEN }}" >> github.properties
            echo "url=https://maven.pkg.github.com/hyperledger/cacti" >> github.properties

            echo "Using ${GITHUB_ACTOR} user."
            echo "username=${GITHUB_ACTOR}" >> github.main.properties
            echo "password=${{ secrets.GITHUB_TOKEN }}" >> github.main.properties
            echo "url=https://maven.pkg.github.com/hyperledger/cacti" >> github.main.properties
          working-directory: weaver/tests/network-setups/corda
        - name: Make the ${{matrix.net1}} network
          run: |
            make setup; make pledge-network
          working-directory: packages/cacti-plugin-copm-${{ matrix.net1 }}
        - name: Make the ${{matrix.net2}} network
          run: |
            make setup; make pledge-network
          working-directory: packages/cacti-plugin-copm-${{ matrix.net2 }}
          if: ${{ matrix.net1 != matrix.net2 }}
        - name: show the running network
          run: docker container ls
        - run: ./tools/ci.sh
        - name: Upload coverage reports as artifacts
          if: ${{ env.RUN_CODE_COVERAGE == 'true' }}
          uses: actions/upload-artifact@v4.3.3
          with:
            name: copm-pledge-${{ matrix.net1 }}-${{ matrix.net2}}
            path: ./code-coverage-ts/**/

    copm-corda-corda-pledge-and-viewstate:
      continue-on-error: false
      env:
        FULL_BUILD_DISABLED: true
        FREE_UP_GITHUB_RUNNER_DISK_SPACE_DISABLED: false
        JEST_TEST_PATTERN: packages/cacti-copm-test/src/test/typescript/integration/test-copm-getverifiedview.test.ts packages/cacti-copm-test/src/test/typescript/integration/test-copm-pledge-claim.test.ts
        JEST_TEST_RUNNER_DISABLED: false
        JEST_TEST_COVERAGE_PATH: ./code-coverage-ts/plc-copm-corda-corda-pledge
        JEST_TEST_CODE_COVERAGE_ENABLED: true
        TAPE_TEST_PATTERN: ''
        COPM_NET_1: "corda"
        COPM_NET_2: "corda"
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@v4.1.1
        - uses: ./.github/actions/copm_test/
        - name: Generate github.properties
          run: |
            echo "Using ${GITHUB_ACTOR} user."
            echo "username=${GITHUB_ACTOR}" >> github.properties
            echo "password=${{ secrets.GITHUB_TOKEN }}" >> github.properties
            echo "url=https://maven.pkg.github.com/hyperledger/cacti" >> github.properties

            echo "Using ${GITHUB_ACTOR} user."
            echo "username=${GITHUB_ACTOR}" >> github.main.properties
            echo "password=${{ secrets.GITHUB_TOKEN }}" >> github.main.properties
            echo "url=https://maven.pkg.github.com/hyperledger/cacti" >> github.main.properties
          working-directory: weaver/tests/network-setups/corda
        - name: Make the corda network
          run: |
            make setup; make pledge-network
          working-directory: packages/cacti-plugin-copm-corda
        - name: show the running network
          run: docker container ls
        - run: ./tools/ci.sh
        - name: Upload coverage reports as artifacts
          if: ${{ env.RUN_CODE_COVERAGE == 'true' }}
          uses: actions/upload-artifact@v4.3.3
          with:
            name: coverage-reports-copm-corda-pledge
            path: ./code-coverage-ts/**/

    matrix-lock:
      continue-on-error: true
      strategy:
        fail-fast: false
        matrix:
            net1: ["fabric", "corda"]
      env:
        FULL_BUILD_DISABLED: true
        FREE_UP_GITHUB_RUNNER_DISK_SPACE_DISABLED: false
        TAPE_TEST_PATTERN: ''
        JEST_TEST_PATTERN: packages/cacti-copm-test/src/test/typescript/integration/test-copm-lock-claim.test.ts
        JEST_TEST_RUNNER_DISABLED: false
        JEST_TEST_COVERAGE_PATH: ./code-coverage-ts/copm-lock-${{ matrix.net1 }}
        JEST_TEST_CODE_COVERAGE_ENABLED: true
        COPM_NET_1: ${{ matrix.net1 }}
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@v4.1.1
        - uses: ./.github/actions/copm_test/
        - name: Generate github.properties
          run: |
            echo "Using ${GITHUB_ACTOR} user."
            echo "username=${GITHUB_ACTOR}" >> github.properties
            echo "password=${{ secrets.GITHUB_TOKEN }}" >> github.properties
            echo "url=https://maven.pkg.github.com/hyperledger/cacti" >> github.properties

            echo "Using ${GITHUB_ACTOR} user."
            echo "username=${GITHUB_ACTOR}" >> github.main.properties
            echo "password=${{ secrets.GITHUB_TOKEN }}" >> github.main.properties
            echo "url=https://maven.pkg.github.com/hyperledger/cacti" >> github.main.properties
          working-directory: weaver/tests/network-setups/corda
        - name: Make the ${{matrix.net1}} network
          run: |
            make setup; make lock-network
          working-directory: packages/cacti-plugin-copm-${{ matrix.net1 }}
        - name: show the running network
          run: docker container ls
        - run: ./tools/ci.sh
        - name: Upload coverage reports as artifacts
          if: ${{ env.RUN_CODE_COVERAGE == 'true' }}
          uses: actions/upload-artifact@v4.3.3
          with:
            name: copm-lock-${{ matrix.net1 }}
            path: ./code-coverage-ts/**/
  
    copm-corda-corda-lock:
      continue-on-error: false
      env:
        FULL_BUILD_DISABLED: true
        FREE_UP_GITHUB_RUNNER_DISK_SPACE_DISABLED: false
        TAPE_TEST_PATTERN: ''
        JEST_TEST_PATTERN: packages/cacti-copm-test/src/test/typescript/integration/test-copm-lock-claim.test.ts
        JEST_TEST_RUNNER_DISABLED: false
        JEST_TEST_COVERAGE_PATH: ./code-coverage-ts/plc-copm-corda-corda-lock
        JEST_TEST_CODE_COVERAGE_ENABLED: true
        COPM_NET_1: "corda"
        COPM_NET_2: "corda"
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/checkout@v4.1.1
        - uses: ./.github/actions/copm_test/
        - name: Generate github.properties
          run: |
            echo "Using ${GITHUB_ACTOR} user."
            echo "username=${GITHUB_ACTOR}" >> github.properties
            echo "password=${{ secrets.GITHUB_TOKEN }}" >> github.properties
            echo "url=https://maven.pkg.github.com/hyperledger/cacti" >> github.properties

            echo "Using ${GITHUB_ACTOR} user."
            echo "username=${GITHUB_ACTOR}" >> github.main.properties
            echo "password=${{ secrets.GITHUB_TOKEN }}" >> github.main.properties
            echo "url=https://maven.pkg.github.com/hyperledger/cacti" >> github.main.properties
          working-directory: weaver/tests/network-setups/corda
        - name: Make the corda network
          run: |
            make setup; make lock-network
          working-directory: packages/cacti-plugin-copm-corda
        - name: show the running network
          run: docker container ls
        - run: ./tools/ci.sh
        - name: Upload coverage reports as artifacts
          if: ${{ env.RUN_CODE_COVERAGE == 'true' }}
          uses: actions/upload-artifact@v4.3.3
          with:
            name: coverage-reports-copm-corda-lock
            path: ./code-coverage-ts/**/

    copm-fabric-fabric-pledge-and-provestate:
        runs-on: ubuntu-22.04
        continue-on-error: false
        env:
          CACTI_NPM_PACKAGE_NAME: "@hyperledger-cacti/cacti-plugin-copm-fabric"
          HFC_LOGGING: '{"debug":"console","info":"console","warn": "console","error":"console"}'
          FULL_BUILD_DISABLED: true
          FREE_UP_GITHUB_RUNNER_DISK_SPACE_DISABLED: false
          JEST_TEST_PATTERN: packages/cacti-copm-test/src/test/typescript/integration/test-copm-pledge-claim.test.ts packages/cacti-plugin-copm-fabric/src/test/typescript/integration/test-copm-getverifiedview.test.ts
          JEST_TEST_RUNNER_DISABLED: false
          JEST_TEST_COVERAGE_PATH: ./code-coverage-ts/plc-copm-fabric-fabric-pledge
          JEST_TEST_CODE_COVERAGE_ENABLED: true
          TAPE_TEST_PATTERN: ""
          TAPE_TEST_RUNNER_DISABLED: true
          COPM_NET_1: "fabric"
          COPM_NET_2: "fabric"
          runs-on: ubuntu-22.04
        steps:
          - uses: actions/checkout@v4.1.1
          - uses: ./.github/actions/copm_test/
          - name: Make the fabric network
            run: |
              make setup
              make pledge-network --trace
            working-directory: packages/cacti-plugin-copm-fabric
          - name: show the running network
            run: docker container ls
          - run: ./tools/ci.sh
          - name: Upload coverage reports as artifacts
            if: ${{ env.RUN_CODE_COVERAGE == 'true' }}
            uses: actions/upload-artifact@v4.3.3
            with:
              name: coverage-reports-copm-fabric
              path: ./code-coverage-ts/**/

    copm-fabric-fabric-lock:
        continue-on-error: false
        env:
          CACTI_NPM_PACKAGE_NAME: "@hyperledger-cacti/cacti-plugin-copm-fabric"
          HFC_LOGGING: '{"debug":"console","info":"console","warn": "console","error":"console"}'
          FULL_BUILD_DISABLED: true
          FREE_UP_GITHUB_RUNNER_DISK_SPACE_DISABLED: false
          JEST_TEST_PATTERN: packages/cacti-copm-test/src/test/typescript/integration/test-copm-lock-claim.test.ts
          JEST_TEST_RUNNER_DISABLED: false
          JEST_TEST_COVERAGE_PATH: ./code-coverage-ts/plc-copm-fabric-fabric-lock
          JEST_TEST_CODE_COVERAGE_ENABLED: true
          TAPE_TEST_PATTERN: ""
          TAPE_TEST_RUNNER_DISABLED: true
          COPM_NET_1: "fabric"
          COPM_NET_2: "fabric"
        runs-on: ubuntu-22.04
        steps:
          - uses: actions/checkout@v4.1.1
          - uses: ./.github/actions/copm_test/
          - name: Make the fabric network
            run: |
              make setup
              make lock-network --trace
            working-directory: packages/cacti-plugin-copm-fabric
          - name: show the running network
            run: docker container ls
          - run: ./tools/ci.sh
          - name: Upload coverage reports as artifacts
            if: ${{ env.RUN_CODE_COVERAGE == 'true' }}
            uses: actions/upload-artifact@v4.3.3
            with:
              name: coverage-reports-copm-fabric-lock
              path: ./code-coverage-ts/**/
